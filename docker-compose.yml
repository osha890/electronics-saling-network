services:

  pg:
    image: postgres
    container_name: pg
    env_file:
      - ./.env
      - ./.env.template
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    env_file:
      - ./.env
      - ./.env.template
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_UI_PORT}:15672"

  django:
    build: .
    container_name: django
    command: sh -c "cd esn &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    ports:
      - "${DJANGO_PORT}:8000"
    depends_on:
      - pg

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A esn.celery worker -l info
    working_dir: /app/esn
    depends_on:
      - django
      - pg
      - rabbitmq

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A esn.celery beat -l info
    working_dir: /app/esn
    depends_on:
      - django
      - pg
      - rabbitmq